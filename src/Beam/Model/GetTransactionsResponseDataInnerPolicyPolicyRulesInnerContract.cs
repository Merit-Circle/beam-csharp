/*
 * Beam game development API
 *
 * The Beam game development API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Beam.Client.OpenAPIDateConverter;

namespace Beam.Model
{
    /// <summary>
    /// GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract
    /// </summary>
    [DataContract(Name = "GetTransactionsResponse_data_inner_policy_policyRules_inner_contract")]
    public partial class GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract : IEquatable<GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract>, IValidatableObject
    {
        /// <summary>
        /// Defines VarObject
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectEnum
        {
            /// <summary>
            /// Enum Contract for value: contract
            /// </summary>
            [EnumMember(Value = "contract")]
            Contract = 1
        }


        /// <summary>
        /// Gets or Sets VarObject
        /// </summary>
        [DataMember(Name = "object", IsRequired = true, EmitDefaultValue = true)]
        public ObjectEnum VarObject { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="varObject">varObject (required).</param>
        /// <param name="createdAt">createdAt (required).</param>
        /// <param name="name">name (required).</param>
        /// <param name="chainId">chainId (required).</param>
        /// <param name="address">address (required).</param>
        /// <param name="deleted">deleted (required).</param>
        /// <param name="abi">abi (required).</param>
        /// <param name="publicVerification">publicVerification (required).</param>
        public GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract(string id = default(string), ObjectEnum varObject = default(ObjectEnum), decimal createdAt = default(decimal), string name = default(string), decimal chainId = default(decimal), string address = default(string), bool deleted = default(bool), List<GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContractAbiInner> abi = default(List<GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContractAbiInner>), bool publicVerification = default(bool))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract and cannot be null");
            }
            this.Id = id;
            this.VarObject = varObject;
            this.CreatedAt = createdAt;
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract and cannot be null");
            }
            this.Name = name;
            this.ChainId = chainId;
            // to ensure "address" is required (not null)
            if (address == null)
            {
                throw new ArgumentNullException("address is a required property for GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract and cannot be null");
            }
            this.Address = address;
            this.Deleted = deleted;
            // to ensure "abi" is required (not null)
            if (abi == null)
            {
                throw new ArgumentNullException("abi is a required property for GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract and cannot be null");
            }
            this.Abi = abi;
            this.PublicVerification = publicVerification;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = true)]
        public decimal CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ChainId
        /// </summary>
        [DataMember(Name = "chainId", IsRequired = true, EmitDefaultValue = true)]
        public decimal ChainId { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name = "address", IsRequired = true, EmitDefaultValue = true)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets Deleted
        /// </summary>
        [DataMember(Name = "deleted", IsRequired = true, EmitDefaultValue = true)]
        public bool Deleted { get; set; }

        /// <summary>
        /// Gets or Sets Abi
        /// </summary>
        [DataMember(Name = "abi", IsRequired = true, EmitDefaultValue = true)]
        public List<GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContractAbiInner> Abi { get; set; }

        /// <summary>
        /// Gets or Sets PublicVerification
        /// </summary>
        [DataMember(Name = "publicVerification", IsRequired = true, EmitDefaultValue = true)]
        public bool PublicVerification { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  VarObject: ").Append(VarObject).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ChainId: ").Append(ChainId).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Deleted: ").Append(Deleted).Append("\n");
            sb.Append("  Abi: ").Append(Abi).Append("\n");
            sb.Append("  PublicVerification: ").Append(PublicVerification).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract);
        }

        /// <summary>
        /// Returns true if GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract instances are equal
        /// </summary>
        /// <param name="input">Instance of GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetTransactionsResponseDataInnerPolicyPolicyRulesInnerContract input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.VarObject == input.VarObject ||
                    this.VarObject.Equals(input.VarObject)
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    this.CreatedAt.Equals(input.CreatedAt)
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.ChainId == input.ChainId ||
                    this.ChainId.Equals(input.ChainId)
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.Deleted == input.Deleted ||
                    this.Deleted.Equals(input.Deleted)
                ) && 
                (
                    this.Abi == input.Abi ||
                    this.Abi != null &&
                    input.Abi != null &&
                    this.Abi.SequenceEqual(input.Abi)
                ) && 
                (
                    this.PublicVerification == input.PublicVerification ||
                    this.PublicVerification.Equals(input.PublicVerification)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.VarObject.GetHashCode();
                hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ChainId.GetHashCode();
                if (this.Address != null)
                {
                    hashCode = (hashCode * 59) + this.Address.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Deleted.GetHashCode();
                if (this.Abi != null)
                {
                    hashCode = (hashCode * 59) + this.Abi.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PublicVerification.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
